-- This is an example site configuration for Gluon v2014.4
--
-- Take a look at the documentation located at
-- http://gluon.readthedocs.org/ for details.
--
-- This configuration will not work as it. You're required to make
-- community specific changes to it!
{
  -- Used for generated hostnames, e.g. freifunk-abcdef123456. (optional)
  hostname_prefix = 'ffue-',

  -- Name of the community.
  site_name = 'Freifunk Uelzen',

  -- Shorthand of the community.
  site_code = 'ffue',

  -- Prefixes used within the mesh. Both are required.
  prefix4 = '10.134.0.0/16',
  prefix6 = 'fd83:e002:c8a1::/48',

  -- Timezone of your community.
  -- See http://wiki.openwrt.org/doc/uci/system#time_zones
  timezone = 'CET-1CEST,M3.5.0,M10.5.0/3',

  -- List of NTP servers in your community.
  -- Must be reachable using IPv6!
  ntp_servers = {'2.openwrt.pool.ntp.org','ntp1.ffue','ntp2.ffue','ntp3.ffue'},

  -- Wireless regulatory domain of your community.
  regdom = 'DE',

  -- Wireless configuration for 2.4 GHz interfaces.
  wifi24 = {
    -- Wireless channel.
    channel = 1,

    -- ESSID used for client network.
    ssid = 'uelzen.freifunk.net',

    -- Specifies the channel width in 802.11n and 802.11ac mode.
    -- Possible values are:
    -- HT20 (single 20MHz channel),
    -- HT40- (2x 20MHz channels, secondary below)
    -- HT40+ (2x 20MHz channels, secondary above)
    htmode = 'HT40+',

    -- Adjust these values!
    mesh_ssid = 'F4:ED:39:BF:BC:95',  -- ESSID used for mesh
    mesh_bssid = 'F4:ED:39:BF:BC:95', -- BSSID used for mesh

    -- Bitrate used for multicast/broadcast packets.
    mesh_mcast_rate = 12000,

    -- (optional) mesh VLAN on 802.11 ad-hoc interface (1-4095)
    -- mesh_vlan = 14,
  },

  -- Wireless configuration for 5 GHz interfaces.
  -- This should be equal to the 2.4 GHz variant, except
  -- for channel and htmode.
  wifi5 = {
    ssid = 'uelzen.freifunk.net',
    channel = 44,
    htmode = 'HT40+',
    mesh_ssid = 'F4:ED:39:BF:BC:95',
    mesh_bssid = 'F4:ED:39:BF:BC:95',
    mesh_mcast_rate = 12000,
    -- mesh_vlan = 14,
  },

  -- The next node feature allows clients to always reach the node it is
  -- connected to using a known IP address.
  next_node = {
    -- anycast IPs of all nodes
    ip4 = '10.134.0.1',
    ip6 = 'fd83:e002:c8a1::e01',

    -- anycast MAC of all nodes
    mac = '16:32:97:42:f9:de',
  },

  -- Refer to http://fastd.readthedocs.org/en/latest/ to better understand
  -- what these options do.
  fastd_mesh_vpn = {
    -- List of crypto-methods to use.
    methods = {'salsa2012+umac'},
    mtu = 1406,
    groups = {
    backbone = {
      -- Limit number of connected peers to reduce bandwidth.
      limit = 2,

      -- List of peers.
      peers = {
        uegw1 = {
          key = 'e7ce92b89263446fc0ecaa0d909582ba4ed720066bf6bfbe5b00d54b8aa97d79',

          -- This is a list, so you might add multiple entries.
          -- remotes = {'ipv4 "xxx.somehost.invalid" port xxxxxx'},
          remotes = {'"uegw1.freifunk-uelzen.de" port 10006'},
         },

        ffuegw1 = {
          key = '232acf9d17309a0712c1ab3c7b690b542a9c90883ca6ae2c1b7b8d67540a486b',

          -- You can also omit the ipv4 to allow both connection via ipv4 and ipv6
          -- remotes = {'"xxx.somehost2.invalid" port xxxxx'},
          remotes = {'"ffuegw1.freifunk-uelzen.de" port 10006'},
         },

        ffuegw2 = {
          key = '247e74cfe81d7d579840b7f84a4901e1ed837ca44f314167c32e00621c74ab0c',
          remotes = {'"ffuegw2.freifunk-uelzen.de" port 10006'},
         },

        ffuegw3 = {
          key = 'ae62813f104b582ffc382c33298a3973aa7e58874656827d77b1f25d881e0828',
          remotes = {'"ffuegw3.freifunk-uelzen.de" port 10006'},
         },

        ffuegw4 = {
          key = 'e2796a5d5cbbbea00046663689e6a1baaced1553a65e995085bb9b2fc2f0513e',
          remotes = {'"ffuegw4.freifunk-uelzen.de" port 10006'},
         },

        ffuegw5 = {
          key = '6de6bd3c33c2822066b4953c6f1bb598e4ef24c08c91fbcb2b553f9ac7060d71',
          remotes = {'"ffuegw5.freifunk-uelzen.de" port 10006'},
         },

        ffuegw6 = {
          key = '50d92272b6ce36548862ad07439c71eb46c8211a42b3677d4e68c0231e4e4541',
          remotes = {'"ffuegw6.freifunk-uelzen.de" port 10006'},
         },

        ffuegw7 = {
          key = 'fd8f82eb7c71878eb931a455eb174e58b05ac12cebbb2faf6eb1fa9642ca8dd3',
          remotes = {'"ffuegw7.freifunk-uelzen.de" port 10006'},
         },
       },
     },
   },
 },

  autoupdater = {
    -- Default branch. Don't forget to set GLUON_BRANCH when building!
    branch = 'stable',

    -- List of branches. You may define multiple branches.
    branches = {
      stable = {
        name = 'stable',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {'http://firmware.ffue/firmware/stable/sysupgrade/',
		   'http://firmware.freifunk-uelzen.de/stable/sysupgrade/',
		  },

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 2,

        -- List of public keys of maintainers.
        pubkeys = {
                   '5a77ef4db975ca549cf8ab03c3403ca8e1798ddafffadf8f46134e07d69a2442', -- julian
                   'bfd00b6d6dd664a0b2d00cff9423b8bf64a88b6c59632b6c5fb6b2a210a3da8b', -- ruediger
                   'd79966dda2d058f4f1b9246fccfbc3e67e072ba2cba7bb2269df77b081977ebd', -- alexander
                   '24b6b27eca3e3047f5c5c01b36ca6df82461aab14d7a68ae55683c46e92bf8dc', -- marc-andre
                   'b0c2c7987757cae1394a00909888d094d4ecf4367eaa8080fe176eeba3832041', -- klemens
        },
      },

      testing = {
         name = 'testing',
         mirrors = {'http://firmware.ffue/firmware/testing/sysupgrade/',
		    'http://firmware.freifunk-uelzen.de/testing/sysupgrade/',
		   },
         good_signatures = 1,
         pubkeys = {
                   '5a77ef4db975ca549cf8ab03c3403ca8e1798ddafffadf8f46134e07d69a2442', -- julian
                   'bfd00b6d6dd664a0b2d00cff9423b8bf64a88b6c59632b6c5fb6b2a210a3da8b', -- ruediger
                   'd79966dda2d058f4f1b9246fccfbc3e67e072ba2cba7bb2269df77b081977ebd', -- alexander
                   '24b6b27eca3e3047f5c5c01b36ca6df82461aab14d7a68ae55683c46e92bf8dc', -- marc-andre
                   'b0c2c7987757cae1394a00909888d094d4ecf4367eaa8080fe176eeba3832041', -- klemens
         },
       },

      experimental = {
         name = 'experimental',
         mirrors = {'http://firmware.ffue/firmware/experimental/sysupgrade/',
		    'http://firmware.freifunk-uelzen.de/experimental/sysupgrade/',
		   },
         good_signatures = 1,
         pubkeys = {
                   '5a77ef4db975ca549cf8ab03c3403ca8e1798ddafffadf8f46134e07d69a2442', -- julian
                   'bfd00b6d6dd664a0b2d00cff9423b8bf64a88b6c59632b6c5fb6b2a210a3da8b', -- ruediger
                   'd79966dda2d058f4f1b9246fccfbc3e67e072ba2cba7bb2269df77b081977ebd', -- alexander
                   '24b6b27eca3e3047f5c5c01b36ca6df82461aab14d7a68ae55683c46e92bf8dc', -- marc-andre
                   'b0c2c7987757cae1394a00909888d094d4ecf4367eaa8080fe176eeba3832041', -- klemens
         },
       },
    },
  },

  -- Node roles
  -- roles {
  --   default = 'node',
  --   list = {
  --     node = 'Normal Node',
  --     test = 'Test Node',
  --     backbone = 'Backbone Node',
  --     service = 'Service Node',
  --   },
  -- },

  -- Bandwidth limiting
  simple_tc = {
    mesh_vpn = {
      ifname = 'mesh-vpn',

      -- You may enable it by default here.
      enabled = true,

      -- Default upload limit (kbit/s).
      limit_egress = 300,

      -- Default download limit (kbit/s).
      limit_ingress = 3000,
    },
  },

  -- Skip setup mode (config mode) on first boot
  -- setup_mode = {
  --  skip = true,
  -- },
}
